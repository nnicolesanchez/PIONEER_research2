# This script calculates the scale length for the main halos 
# of a Milky Way type  N-body simulation snapshot. 
# Input parameters: 
#       Age range :      age=[min,max]      (default 1 - 6 Gyrs
#       2D Radius range: radius=[rmax] (default 0 - 10 kpc
#       Z Height range:  z=[zmax]

import matplotlib.pyplot as plt
import pynbody
import sys
print 'Number of arguments:', len(sys.argv)
quit()

if len(sys.argv) == 1:
    age_max = 6.
    age_min = 1.
    r_max   = 11.
    z_max   = 2.
else:
    age_max = sys.argv[1]
    age_min = sys.argv[2]
    r_max   = sys.argv[3]
    z_max   = sys.argv[4]

file = pynbody.load('/nobackupp8/fgoverna/pioneer50h243.1536g1bwK1BH/pioneer50h243.1536gst1bwK1BH.004096')
file.properties
file.properties['time'].in_units('Gyr')
file.loadable_keys()
file.physical_units()
h = file.halos()
h1 = h[1]
pynbody.analysis.angmom.faceon(h1)

# Get disk stars within radius 0-10 kpc, & age 1-6 Gyr 
R_d = ((h1.s['x'].in_units('kpc'))**2. + (h1.s['y'].in_units('kpc'))**2.)**(0.5)
disk_stars_xymax = (R_d < r_max) & (R_d > -r_max)
disk_stars_zmax  = (h1.s['z'].in_units('kpc') < z_max) & (h1.s['z'].in_units('kpc') > -z_max)

disk_stars = h1.s[disk_stars_xymax & disk_stars_zmax]
print('Number of total stars within radius 10 kpc (z < 2kpc) in main halo',len(disk_stars))

young_stars1 = disk_stars['age'].in_units('Gyr') < age_max
young_stars2 = disk_stars['age'].in_units('Gyr') > age_min

young_disk_stars = disk_stars[young_stars1 & young_stars2]
print('Number of total stars with ages 1-6 Gyr in main halo disk',len(young_disk_stars))

yds_hl_r = pynbody.analysis.luminosity.half_light_r(young_disk_stars, band='v')
print('Half-light radius of H1',yds_hl_r)

yds_scale_l = yds_hl_r / 1.678
print('Disk scale length of H1 for 1-6 Gyr old stars',yds_scale_l)
