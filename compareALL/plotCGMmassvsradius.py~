# This script creates a plot of the CGM mass 
# of different phases:
#        Cool: 10^4   - 10^4.5
#              10^4.5 - 10^5
#        Warm: 10^5   - 10^6
#        Hot:  10^6   - 10^7

#     - Outputs:
#         1. Plot of warm CGM Mass vs radius for 
#            all sims (P0-GM7)
#               - one for cool, c/w, warm, hot


# N. Nicole Sanchez -- September 2017
# Univ. of Wash.    -- Nbody Shop
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import matplotlib as mpl
import numpy as np
import sys

plt.rc('font', size=12, family='serif', style='normal', variant='normal', stretch='normal', weight='normal')
plt.rc('xtick', labelsize=12)
plt.rc('xtick.major', size=6, width=1)
plt.rc('lines', lw=2)
plt.rc('axes', lw=1, labelsize=12)

names     = ['P0','GM1','GM4','GM5','GM6','GM7']
colors    = ['DodgerBlue','SteelBlue','FireBrick','IndianRed','Salmon','Orange']
labels    = ['cool','cool/warm','warm','hot']
lines     = ['-','--','-.',':']
colors2   = ['lightcoral','indianred','FireBrick','DarkRed']

for i in range(len(names)):
    radii = np.loadtxt(names[i]+'_radius.txt')
    total = np.loadtxt(names[i]+'_totCGMmassvsradius.txt')
    warm  = np.loadtxt(names[i]+'_warmCGMmassvsradius.txt')
    warm1 = np.loadtxt(names[i]+'_warm_half1CGMmassvsradius.txt')
    warm2 = np.loadtxt(names[i]+'_warm_half2CGMmassvsradius.txt')

    print(len(radii),len(warm),len(warm1),len(warm2))

    #plt.plot(dist_bins[0:i+1],np.log10(total),color=colors2[j],linestyle=lines[j],label=labels2[j])
    plt.plot(np.log10(radii[:-1]),warm,color=colors2[0],linestyle=lines[0],label=r'T = 10$^{5}$ - 10$^{6}$')
    plt.plot(np.log10(radii[:-1]),warm1,color=colors2[1],linestyle=lines[1],label=r'T = 10$^{5}$ - 10$^{5.7}$')
    plt.plot(np.log10(radii[:-1]),warm2,color=colors2[2],linestyle=lines[2],label=r'T = 10$^{5.7}$ - 10$^{6}$')

    plt.ylabel(r'CGM Cumulative Mass [M$_{\odot}$]')
    plt.xlabel('Radius [kpc]')
    plt.legend()
    plt.savefig(names[i]+'_warmCGMmassvsradius.pdf')
    plt.show()


